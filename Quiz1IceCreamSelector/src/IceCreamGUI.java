
import java.awt.FileDialog;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ipd
 */
public class IceCreamGUI extends javax.swing.JFrame {
    
    
    File currentFile;
    //FileNameExtensionFilter ff = new FileNameExtensionFilter("Text files (*.ord)", "txt");

    public IceCreamGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        fileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        lblOrders = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaText = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        lblCustomerName = new javax.swing.JLabel();
        tfCustomerName = new javax.swing.JTextField();
        lblScoopSize = new javax.swing.JLabel();
        rbtnSmall = new javax.swing.JRadioButton();
        rbtnMedium = new javax.swing.JRadioButton();
        rbtnLarge = new javax.swing.JRadioButton();
        lblToppings = new javax.swing.JLabel();
        cbChocolate = new javax.swing.JCheckBox();
        cbSprinkles = new javax.swing.JCheckBox();
        lblConeType = new javax.swing.JLabel();
        comboBoxWaffle = new javax.swing.JComboBox<>();
        btnAdd1 = new javax.swing.JButton();
        btnAdd2 = new javax.swing.JButton();
        btnAdd3 = new javax.swing.JButton();
        btnAdd4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        loadFile = new javax.swing.JMenuItem();
        saveFile = new javax.swing.JMenuItem();
        exitFile = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 350));

        lblOrders.setText("Orders");

        areaText.setColumns(20);
        areaText.setRows(5);
        jScrollPane1.setViewportView(areaText);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(lblOrders)
                .addContainerGap(193, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblOrders)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.LINE_END);

        jPanel2.setPreferredSize(new java.awt.Dimension(400, 350));

        lblCustomerName.setText("Customer Name :");

        tfCustomerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCustomerNameActionPerformed(evt);
            }
        });

        lblScoopSize.setText("Scoop Size:");

        buttonGroup1.add(rbtnSmall);
        rbtnSmall.setText("Small");
        rbtnSmall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnSmallActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnMedium);
        rbtnMedium.setText("Medium");
        rbtnMedium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnMediumActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnLarge);
        rbtnLarge.setText("Large");

        lblToppings.setText("Toppings");

        cbChocolate.setText("Chocolate ");

        cbSprinkles.setText("Sprinkles ");

        lblConeType.setText("Cone Type");

        comboBoxWaffle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Waffle", "Sweet", "Chocolate", " " }));

        btnAdd1.setPreferredSize(new java.awt.Dimension(90, 25));
        btnAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd1ActionPerformed(evt);
            }
        });

        btnAdd2.setPreferredSize(new java.awt.Dimension(90, 25));
        btnAdd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd2ActionPerformed(evt);
            }
        });

        btnAdd3.setPreferredSize(new java.awt.Dimension(90, 25));
        btnAdd3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd3ActionPerformed(evt);
            }
        });

        btnAdd4.setPreferredSize(new java.awt.Dimension(90, 25));
        btnAdd4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblScoopSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCustomerName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(tfCustomerName)
                                .addGap(32, 32, 32))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(rbtnSmall)
                                .addGap(26, 26, 26)
                                .addComponent(rbtnMedium)
                                .addGap(18, 18, 18)
                                .addComponent(rbtnLarge)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblToppings)
                        .addGap(47, 47, 47)
                        .addComponent(cbChocolate)
                        .addGap(18, 18, 18)
                        .addComponent(cbSprinkles)
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblConeType)
                    .addComponent(btnAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(comboBoxWaffle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAdd3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomerName)
                    .addComponent(tfCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblScoopSize)
                    .addComponent(rbtnSmall)
                    .addComponent(rbtnMedium)
                    .addComponent(rbtnLarge))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblToppings)
                    .addComponent(cbChocolate)
                    .addComponent(cbSprinkles))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblConeType)
                    .addComponent(comboBoxWaffle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(233, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        fileMenu.setText("File");

        loadFile.setText("Load Flavours...");
        loadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFileActionPerformed(evt);
            }
        });
        fileMenu.add(loadFile);

        saveFile.setText("Save Orders As...");
        saveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileActionPerformed(evt);
            }
        });
        fileMenu.add(saveFile);

        exitFile.setText("Exit");
        exitFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitFileActionPerformed(evt);
            }
        });
        fileMenu.add(exitFile);

        jMenuBar1.add(fileMenu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFileActionPerformed
        fileChooser.setFileFilter(new FileNameExtensionFilter("Text files (*.txt)", "txt"));
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
            currentFile = fileChooser.getSelectedFile();//to get the file into the current file
            Scanner s = new Scanner(currentFile).useDelimiter("\n");
            btnAdd1.setText(s.next());
            btnAdd2.setText(s.next());
            btnAdd3.setText(s.next());
            btnAdd4.setText(s.next());
            } catch (FileNotFoundException ex) {
                currentFile = null;
                JOptionPane.showMessageDialog(this,
                        "Unable to read file contents from " + currentFile.getAbsolutePath(),
                        "File access error",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
        }    
   
    }//GEN-LAST:event_loadFileActionPerformed

    private void tfCustomerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCustomerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCustomerNameActionPerformed

    private void btnAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd1ActionPerformed
      
    String inside = btnAdd1.getText();
    
    
        
    String name = tfCustomerName.getText();
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "You forgot to enter your name",
                    "Name missing",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
     ScoopRange scoop;
        if (rbtnSmall.isSelected()) {
            scoop = ScoopRange.Small;
        } else if (rbtnMedium.isSelected()) {
            scoop = ScoopRange.Medium;
        } else if (rbtnLarge.isSelected()) {
            scoop = ScoopRange.Large;
        } else {
            JOptionPane.showMessageDialog(this,
                    "Unknown radio box selection",
                    "Internal error",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        ArrayList<String> toppingsL = new ArrayList<>();
        if (cbChocolate.isSelected()) {
            toppingsL.add("Chocolate");
        }
        if (cbSprinkles.isSelected()) {
            toppingsL.add("Sprinkles");
        }
        
    String toppingsList = "";
        for (String p : toppingsL) {
            if (toppingsList.equals("")) {
                toppingsList = p;
            } else {
                toppingsList += "," + p;
            }
        }
        
    String combo = (String) comboBoxWaffle.getSelectedItem();
       
             
        
        //System.out.printf("%s;%s;%s;%s;%s\n",
         //       name, scoop, toppingsList, combo);
         areaText.setText(name + " - " + scoop + " - " + toppingsL + " - " + combo + " - " + inside);
        
         
    }//GEN-LAST:event_btnAdd1ActionPerformed

    private void btnAdd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd2ActionPerformed
      
        String inside = btnAdd2.getText();
       
        String name = tfCustomerName.getText();
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "You forgot to enter your name",
                    "Name missing",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
     ScoopRange scoop;
        if (rbtnSmall.isSelected()) {
            scoop = ScoopRange.Small;
        } else if (rbtnMedium.isSelected()) {
            scoop = ScoopRange.Medium;
        } else if (rbtnLarge.isSelected()) {
            scoop = ScoopRange.Large;
        } else {
            JOptionPane.showMessageDialog(this,
                    "Unknown radio box selection",
                    "Internal error",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        ArrayList<String> toppingsL = new ArrayList<>();
        if (cbChocolate.isSelected()) {
            toppingsL.add("Chocolate");
        }
        if (cbSprinkles.isSelected()) {
            toppingsL.add("Sprinkles");
        }
        
    String toppingsList = "";
        for (String p : toppingsL) {
            if (toppingsList.equals("")) {
                toppingsList = p;
            } else {
                toppingsList += "," + p;
            }
        }
        
    String combo = (String) comboBoxWaffle.getSelectedItem();
       
             
        
        //System.out.printf("%s;%s;%s;%s;%s\n",
         //       name, scoop, toppingsList, combo);
         areaText.setText(name + " - " + scoop + " - " + toppingsL + " - " + combo + " - " + inside);
    }//GEN-LAST:event_btnAdd2ActionPerformed

    private void btnAdd3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd3ActionPerformed
       
        String inside = btnAdd3.getText();
        
        String name = tfCustomerName.getText();
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "You forgot to enter your name",
                    "Name missing",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
     ScoopRange scoop;
        if (rbtnSmall.isSelected()) {
            scoop = ScoopRange.Small;
        } else if (rbtnMedium.isSelected()) {
            scoop = ScoopRange.Medium;
        } else if (rbtnLarge.isSelected()) {
            scoop = ScoopRange.Large;
        } else {
            JOptionPane.showMessageDialog(this,
                    "Unknown radio box selection",
                    "Internal error",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        ArrayList<String> toppingsL = new ArrayList<>();
        if (cbChocolate.isSelected()) {
            toppingsL.add("Chocolate");
        }
        if (cbSprinkles.isSelected()) {
            toppingsL.add("Sprinkles");
        }
        
    String toppingsList = "";
        for (String p : toppingsL) {
            if (toppingsList.equals("")) {
                toppingsList = p;
            } else {
                toppingsList += "," + p;
            }
        }
        
    String combo = (String) comboBoxWaffle.getSelectedItem();
       
             
        
        //System.out.printf("%s;%s;%s;%s;%s\n",
         //       name, scoop, toppingsList, combo);
         areaText.setText(name + " - " + scoop + " - " + toppingsL + " - " + combo + " - " + inside );
    }//GEN-LAST:event_btnAdd3ActionPerformed

    private void btnAdd4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd4ActionPerformed
        
        String inside = btnAdd4.getText();
        
        String name = tfCustomerName.getText();
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "You forgot to enter your name",
                    "Name missing",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
     ScoopRange scoop;
        if (rbtnSmall.isSelected()) {
            scoop = ScoopRange.Small;
        } else if (rbtnMedium.isSelected()) {
            scoop = ScoopRange.Medium;
        } else if (rbtnLarge.isSelected()) {
            scoop = ScoopRange.Large;
        } else {
            JOptionPane.showMessageDialog(this,
                    "Unknown radio box selection",
                    "Internal error",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        ArrayList<String> toppingsL = new ArrayList<>();
        if (cbChocolate.isSelected()) {
            toppingsL.add("Chocolate");
        }
        if (cbSprinkles.isSelected()) {
            toppingsL.add("Sprinkles");
        }
        
    String toppingsList = "";
        for (String p : toppingsL) {
            if (toppingsList.equals("")) {
                toppingsList = p;
            } else {
                toppingsList += "," + p;
            }
        }
        
    String combo = (String) comboBoxWaffle.getSelectedItem();
       
             
        
        //System.out.printf("%s;%s;%s;%s;%s\n",
         //       name, scoop, toppingsList, combo);
         areaText.setText(name + " - " + scoop + " - " + toppingsL + " - " + combo + " - " + inside );
    }//GEN-LAST:event_btnAdd4ActionPerformed

    private void saveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileActionPerformed
       fileChooser.setFileFilter(new FileNameExtensionFilter("Text files (*.txt)", "txt"));
        if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            currentFile = fileChooser.getSelectedFile();
            // FIXME: what if user selected "All files" filter?
            if (fileChooser.getFileFilter() != fileChooser.getAcceptAllFileFilter()) {
                if (!currentFile.getName().toLowerCase().endsWith(".txt")) {
                    currentFile = new File(currentFile.getAbsolutePath() + ".txt");
                }
            }
            try (PrintWriter pw = new PrintWriter(currentFile)) {
                pw.write(areaText.getText());
                //docModified(false);
                //lblStatus.setText(currentFile.getAbsolutePath());
                //return true;
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this,
                        "Unable to write file contents to " + currentFile.getAbsolutePath(),
                        "File access error",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        return;
    }//GEN-LAST:event_saveFileActionPerformed

    private void exitFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitFileActionPerformed
       dispose();
    }//GEN-LAST:event_exitFileActionPerformed

    private void rbtnSmallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnSmallActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnSmallActionPerformed

    private void rbtnMediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnMediumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnMediumActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IceCreamGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IceCreamGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IceCreamGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IceCreamGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IceCreamGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaText;
    private javax.swing.JButton btnAdd1;
    private javax.swing.JButton btnAdd2;
    private javax.swing.JButton btnAdd3;
    private javax.swing.JButton btnAdd4;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cbChocolate;
    private javax.swing.JCheckBox cbSprinkles;
    private javax.swing.JComboBox<String> comboBoxWaffle;
    private javax.swing.JMenuItem exitFile;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblConeType;
    private javax.swing.JLabel lblCustomerName;
    private javax.swing.JLabel lblOrders;
    private javax.swing.JLabel lblScoopSize;
    private javax.swing.JLabel lblToppings;
    private javax.swing.JMenuItem loadFile;
    private javax.swing.JRadioButton rbtnLarge;
    private javax.swing.JRadioButton rbtnMedium;
    private javax.swing.JRadioButton rbtnSmall;
    private javax.swing.JMenuItem saveFile;
    private javax.swing.JTextField tfCustomerName;
    // End of variables declaration//GEN-END:variables
}
